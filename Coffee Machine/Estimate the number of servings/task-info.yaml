type: edu
files:
- name: src/machine/Main.kt
  visible: true
  text: |
    package machine

    fun main() {
        println("Hello, world!")
    }
  learner_created: false
- name: test/CoffeeMachineTest.java
  visible: false
  text: |
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.TestCase;

    import java.util.Arrays;
    import java.util.List;


    class TestClue {
        boolean cond;
        int num;
        boolean showTests;
        TestClue(boolean c, int n, boolean showTests) {
            cond = c;
            num = n;
            this.showTests = showTests;
        }
    }

    public class CoffeeMachineTest extends StageTest<TestClue> {

        @Override
        public List<TestCase<TestClue>> generate() {
            return Arrays.asList(
                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 0, true))
                    .setInput("300\n65\n111\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 2, true))
                    .setInput("600\n153\n100\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 2, true))
                    .setInput("1400\n150\n100\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 2, true))
                    .setInput("1400\n1500\n45\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(false, 2, true))
                    .setInput("599\n250\n200\n10"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 867, true))
                    .setInput( "345640\n43423\n23234\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(false, 1548, true))
                    .setInput("345640\n434230\n23234\n19246"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(false, 172, true))
                    .setInput( "34564\n43423\n23234\n19246"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 0, false))
                    .setInput("399\n112\n111\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 3, false))
                    .setInput("2400\n249\n100\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 1, false))
                    .setInput("1400\n1500\n44\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(false, 2, false))
                    .setInput("500\n250\n200\n10"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 171, false))
                    .setInput("34564\n43423\n23234\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(true, 1547, false))
                    .setInput("345640\n434230\n23234\n1"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(false, 868, false))
                    .setInput("345640\n43423\n23234\n19246")

            );
        }

        @Override
        public CheckResult check(String reply, TestClue clue) {
            String[] lines = reply.trim().split(":");
            String userOutput = lines[lines.length - 1].trim();
            String loweredOutput = userOutput.toLowerCase();
            boolean ans = clue.cond;
            int amount = clue.num;
            if (ans) {
                if (amount > 0) {
                    boolean isCorrect =
                        loweredOutput.contains(Integer.toString(amount))
                            && loweredOutput.contains("yes");

                    if (isCorrect) {
                        return CheckResult.correct();
                    } else {

                        String rightOutput =
                            "Yes, I can make that amount of coffee" +
                                " (and even " + amount + " more than that)";

                        if (clue.showTests) {
                            return new CheckResult(false,
                                "Your output:\n" +
                                    userOutput +
                                    "\nRight output:\n" +
                                    rightOutput);
                        } else {
                            return CheckResult.wrong("");
                        }
                    }
                }

                String rightOutput =
                    "Yes, I can make that amount of coffee";
                if (loweredOutput.contains(rightOutput.toLowerCase())) {
                    return CheckResult.correct();
                } else {
                    if (clue.showTests) {
                        return new CheckResult(false,
                            "Your output:\n" +
                                userOutput +
                                "\nRight output:\n" +
                                rightOutput);
                    } else {
                        return CheckResult.wrong("");
                    }
                }

            } else {
                boolean cond1 = loweredOutput.contains("no");
                boolean cond2 = loweredOutput.contains(Integer.toString(amount));

                if (cond1 && cond2) {
                    return CheckResult.correct();
                } else {

                    String rightOutput = "No, I can make only " +
                        amount +" cup(s) of coffee";

                    if (clue.showTests) {
                        return new CheckResult(false,
                            "Your output:\n" +
                                userOutput +
                                "\nRight output:\n" +
                                rightOutput);
                    } else {
                        return CheckResult.wrong("");
                    }
                }
            }
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/learn/step/5661#comment
status: Failed
feedback:
  message: |-
    Wrong answer in test #2

    Your output:
    No, I can make only 3 cups of coffee
    Right output:
    Yes, I can make that amount of coffee (and even 2 more than that)

    Please find below the output of your program during this failed test.
    Note that the &#39;&gt;&#39; character indicates the beginning of the input line.

    ---

    Write how many ml of water the coffee machine has:
    &gt; 600
    Write how many ml of milk the coffee machine has:
    &gt; 153
    Write how many grams of coffee beans the coffee machine has:
    &gt; 100
    Write how many cups of coffee you will need:
    &gt; 1
    No, I can make only 3 cups of coffee
  time: "Wed, 30 Nov 2022 14:32:56 UTC"
record: -1
